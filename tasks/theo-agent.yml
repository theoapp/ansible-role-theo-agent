---
- name: Check variables consistency
  ansible.builtin.assert:
    that: |
      (
        (
          theo_agent_verify_signature|bool and
          theo_agent_public_key|string|length|int > 0 and
          theo_agent_public_key|string != 'None'
        ) or
        not theo_agent_verify_signature|bool
      )

- name: Check current theo-agent version
  ansible.builtin.command: theo-agent --version | grep '^Version:' | awk '{ print $2 }'
  register: theo_agent_current_version
  changed_when: false
  failed_when: false

- name: Set public key path for config
  ansible.builtin.set_fact:
    theo_agent_config_public_key_path: "public_key: {{ theo_agent_public_key_path }}"
  when: theo_agent_verify_signature|bool

- name: Set public key path for config
  ansible.builtin.set_fact:
    theo_agent_config_public_key_path: ""
  when: not theo_agent_verify_signature|bool

- name: Delete existing theo-agent version if different
  ansible.builtin.file:
    path: "{{ theo_agent_path }}"
    state: absent
  when: >
    theo_agent_current_version.stdout is defined
    and theo_agent_version not in theo_agent_current_version.stdout

- name: Install theo-agent executable
  ansible.builtin.get_url:
    url: "{{ theo_agent_download_url }}"
    dest: "{{ theo_agent_path }}"
    mode: "755"
  register: install_theo_agent_executable
  ignore_errors: true

- name: Install theo-agent executable (alternative for older systems without SNI)
  when: install_theo_agent_executable is failed
  block:
    - name: Ensure curl is present
      ansible.builtin.package:
        name: curl
        state: present

    - name: Download theo-agent executable (alternative for older systems without SNI)  # noqa command-instead-of-module
      ansible.builtin.shell: >
        curl -sSL -o {{ theo_agent_path }} {{ theo_agent_download_url }} &&
        chmod 755 {{ theo_agent_path }}
      args:
        creates: "{{ theo_agent_path }}"
        warn: false
      when: install_theo_agent_executable is failed

- name: Add theo-agent user
  ansible.builtin.user:
    name: "{{ theo_agent_user }}"
    comment: "Theo Agent"
    shell: /bin/false
    system: true

- name: Create cache directory
  ansible.builtin.file:
    path: "{{ theo_agent_cache_dir }}"
    state: directory
    owner: "{{ theo_agent_user }}"
    mode: "700"

- name: Create config directory
  ansible.builtin.file:
    path: "{{ theo_agent_config_dir }}"
    state: directory
    mode: "700"
    owner: "{{ theo_agent_user }}"

- name: Create config file
  ansible.builtin.template:
    src: config.yml.j2
    dest: "{{ theo_agent_config_path }}"
    owner: "{{ theo_agent_user }}"
    mode: "600"

- name: Create public key file
  ansible.builtin.copy:
    dest: "{{ theo_agent_public_key_path }}"
    owner: "{{ theo_agent_user }}"
    mode: "600"
    content: "{{ theo_agent_public_key }}"
  when: theo_agent_verify_signature|bool
